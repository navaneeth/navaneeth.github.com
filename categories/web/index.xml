<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Web on {love to code}</title>
    <link>http://blog.nkn.io/categories/web/</link>
    <description>Recent content in Web on {love to code}</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Tue, 18 Nov 2014 12:55:32 +0530</lastBuildDate>
    
	<atom:link href="http://blog.nkn.io/categories/web/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>document.ready() handler not getting fired   Rails4</title>
      <link>http://blog.nkn.io/post/document.ready-handler-not-getting-fired---rails4/</link>
      <pubDate>Tue, 18 Nov 2014 12:55:32 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/document.ready-handler-not-getting-fired---rails4/</guid>
      <description>Rails4 uses a gem called turbolinks which makes following links on the web application faster. This gem is added to the Gemfile by default when a new rails project is initialized. However, there are few side effects this can cause.
Consider the following JS, added into app/assets/javascripts/projects.js:
$(function () { $(&#39;#startDate&#39;).datetimepicker({ pickTime: false }); });  This looks alright, but won&amp;rsquo;t work as expected.
When rails navigates to the page following a link, turbolink comes into picture and makes it faster by caching the JS contents.</description>
    </item>
    
    <item>
      <title>Hiding menu when clicking outside - AngularJS</title>
      <link>http://blog.nkn.io/post/hiding-menu-when-clicking-outside---angularjs/</link>
      <pubDate>Sun, 28 Sep 2014 11:29:28 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/hiding-menu-when-clicking-outside---angularjs/</guid>
      <description>Assume you have a menu which looks like the following:
&amp;lt;div class=&amp;quot;right-menu&amp;quot; ng-click=&amp;quot;toggleMenu($event);&amp;quot;&amp;gt; &amp;lt;img src=&amp;quot;img/RightMenuIcon.png&amp;quot; alt=&amp;quot;&amp;quot; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div ng-show=&amp;quot;menuOpened&amp;quot; class=&amp;quot;menu-dropdown-right&amp;quot;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li ng-hide=&amp;quot;loggedIn&amp;quot; class=&amp;quot;class&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;#/authenticate&amp;quot;&amp;gt;Login&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li ng-show=&amp;quot;loggedIn&amp;quot; ng-click=&amp;quot;logOut()&amp;quot;&amp;gt;&amp;lt;a href=&amp;quot;#&amp;quot;&amp;gt;Logout&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt;  When the div gets a click event, angular calls toggleMenu which toggles the menuOpened variable. Changing the value of this variable in turn makes the div show/hide.
To hide the menu when clicking outside of the div, we add a onclick handler to window object which checks the menuOpened variable and updates it if the menu is visible.</description>
    </item>
    
  </channel>
</rss>