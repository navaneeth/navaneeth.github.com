<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>Posts on {love to code}</title>
    <link>https://navaneeth.github.io/post/</link>
    <description>Recent content in Posts on {love to code}</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Mon, 04 Sep 2017 10:34:36 +0530</lastBuildDate>
    
	<atom:link href="https://navaneeth.github.io/post/index.xml" rel="self" type="application/rss+xml" />
    
    
    <item>
      <title>Onam</title>
      <link>https://navaneeth.github.io/post/onam/</link>
      <pubDate>Mon, 04 Sep 2017 10:34:36 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/onam/</guid>
      <description>I love Onam.
It is an amazing festival which all Keralites celeberates without caste and religion. Onam happens when the weather is at it&amp;rsquo;s best. Right after monsoon rains, whole Kerala turns colorful to welcome Onam. This time is a celeberation for photography lovers.
I made the below image on the Onam day. The mix includes, Canon 7D MKII, 100-400L and flash in high speed sync. This image was made at a stunning location named Vallikkunnu,</description>
    </item>
    
    <item>
      <title>We got Lehâ€™d!</title>
      <link>https://navaneeth.github.io/post/leh-ladakh-bike-trip/</link>
      <pubDate>Thu, 06 Jul 2017 14:37:36 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/leh-ladakh-bike-trip/</guid>
      <description>Feel like getting out of here? I am game- let me grab the bike keys and a map of Himalayas. Why Himalayas? Well, because Himalayas has always fascinated me. I have read countless books on Himalayan travel and nerve cracking experiences people had.
This July (26th Jun 2017 to 5th July 2017), Anju and I took the courage and went for a Himalayan trip on a motorcycle. The trip was adventurous and fun filled.</description>
    </item>
    
    <item>
      <title>Accessing nested keys from a map in Elixir</title>
      <link>https://navaneeth.github.io/post/accessing-nested-keys-from-a-map-in-elixir/</link>
      <pubDate>Tue, 14 Jun 2016 19:01:04 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/accessing-nested-keys-from-a-map-in-elixir/</guid>
      <description>&lt;p&gt;Erlang VM is a powerful pattern matching system. Pattern matching comes very handy when you want to access nested fields in a map.&lt;/p&gt;

&lt;p&gt;Recently at work, I had to parse a large JSON and extract value of a key. This post shows how you can use pattern matching to extract deeply nested values from a JSON.&lt;/p&gt;</description>
    </item>
    
    <item>
      <title>oh my jackson!</title>
      <link>https://navaneeth.github.io/post/oh-my-jackson/</link>
      <pubDate>Wed, 30 Dec 2015 18:30:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/oh-my-jackson/</guid>
      <description>Jackson just made my day!
Today, I had to make some changes to one of our API. The change was minor so I have added additional fields into my JSON response. I have also kept the old fields just to make the existing clients happy.
During testing, I figured out that the change breaks existing clients. I was surprised! The error was,
 org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field &amp;ldquo;image&amp;rdquo; (Class Promotion), not marked as ignorable</description>
    </item>
    
    <item>
      <title>Upgrading blog to hugo</title>
      <link>https://navaneeth.github.io/post/upgrading-blog-to-hugo/</link>
      <pubDate>Sat, 26 Dec 2015 22:25:29 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/upgrading-blog-to-hugo/</guid>
      <description>I always wanted to try out Hugo but never got a chance to do it. I spent some time today and migrated my Octopress blog to Hugo. So far, I am liking it. I didn&amp;rsquo;t find a theme which matches my expectations, but the default one and few others are good enough to get started.</description>
    </item>
    
    <item>
      <title>Bringing business ideas to live in 3 months</title>
      <link>https://navaneeth.github.io/post/bringing-business-ideas-to-live-in-3-months/</link>
      <pubDate>Sat, 26 Dec 2015 12:26:42 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/bringing-business-ideas-to-live-in-3-months/</guid>
      <description>Early July, we started working with 2 ex-yahoo friends who had a nice product idea that they wanted to make it live. They had some screen designs on paper and clear cut vision on what the product should look like.
We started with the development, post a week of ideation and technical spikes, and guess what, we had MVP ready for a limited user release in less than 9 weeks and a full production version by the end of October.</description>
    </item>
    
    <item>
      <title>Function strdup implicitly converted to pointer</title>
      <link>https://navaneeth.github.io/post/function-strdup-implicitly-converted-to-pointer/</link>
      <pubDate>Thu, 21 May 2015 10:50:48 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/function-strdup-implicitly-converted-to-pointer/</guid>
      <description>I was trying to make a debian package for libvarnam. Lot of work went into making the package ready. Debian has very strict rules about how the packaging should be done. Debian also marks few errors as fatal and which may require a code change to fix it. One of the errors I faced was the following:
 Our automated build log filter detected the problem(s) above that will likely cause your package to segfault on architectures where the size of a pointer is greater than the size of an integer, such as ia64 and amd64.</description>
    </item>
    
    <item>
      <title>document.ready() handler not getting fired   Rails4</title>
      <link>https://navaneeth.github.io/post/document.ready-handler-not-getting-fired-rails4/</link>
      <pubDate>Tue, 18 Nov 2014 12:55:32 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/document.ready-handler-not-getting-fired-rails4/</guid>
      <description>Rails4 uses a gem called turbolinks which makes following links on the web application faster. This gem is added to the Gemfile by default when a new rails project is initialized. However, there are few side effects this can cause.
Consider the following JS, added into app/assets/javascripts/projects.js:
$(function () { $(&#39;#startDate&#39;).datetimepicker({ pickTime: false }); });  This looks alright, but won&amp;rsquo;t work as expected.
When rails navigates to the page following a link, turbolink comes into picture and makes it faster by caching the JS contents.</description>
    </item>
    
    <item>
      <title>Hiding menu when clicking outside - AngularJS</title>
      <link>https://navaneeth.github.io/post/hiding-menu-when-clicking-outside-angularjs/</link>
      <pubDate>Sun, 28 Sep 2014 11:29:28 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/hiding-menu-when-clicking-outside-angularjs/</guid>
      <description>Assume you have a menu which looks like the following:
&amp;lt;div class=&amp;#34;right-menu&amp;#34; ng-click=&amp;#34;toggleMenu($event);&amp;#34;&amp;gt; &amp;lt;img src=&amp;#34;img/RightMenuIcon.png&amp;#34; alt=&amp;#34;&amp;#34; /&amp;gt; &amp;lt;/div&amp;gt; &amp;lt;div ng-show=&amp;#34;menuOpened&amp;#34; class=&amp;#34;menu-dropdown-right&amp;#34;&amp;gt; &amp;lt;ul&amp;gt; &amp;lt;li ng-hide=&amp;#34;loggedIn&amp;#34; class=&amp;#34;class&amp;#34;&amp;gt;&amp;lt;a href=&amp;#34;#/authenticate&amp;#34;&amp;gt;Login&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;li ng-show=&amp;#34;loggedIn&amp;#34; ng-click=&amp;#34;logOut()&amp;#34;&amp;gt;&amp;lt;a href=&amp;#34;#&amp;#34;&amp;gt;Logout&amp;lt;/a&amp;gt; &amp;lt;/li&amp;gt; &amp;lt;/ul&amp;gt; &amp;lt;/div&amp;gt; When the div gets a click event, angular calls toggleMenu which toggles the menuOpened variable. Changing the value of this variable in turn makes the div show/hide.
To hide the menu when clicking outside of the div, we add a onclick handler to window object which checks the menuOpened variable and updates it if the menu is visible.</description>
    </item>
    
    <item>
      <title>how to get lintian warnings when using ubuntu</title>
      <link>https://navaneeth.github.io/post/how-to-get-lintian-warnings-when-using-ubuntu/</link>
      <pubDate>Sun, 23 Mar 2014 13:00:00 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/how-to-get-lintian-warnings-when-using-ubuntu/</guid>
      <description>Recently, I started to package libvarnam for Debian. I followed the debian packaging guidelines and successfully created a package. I am using Ubuntu instead of Debian to do the packaging. Since Ubuntu is based on Debian, packaging also has the same procedure.
Debian requires all the packages to be lintian clean. Lintian is a command line utility which checks for errors and standards violations in the package files. My package was lintian clean and I have uploaded it into the debian mentors page seeking for sponsors.</description>
    </item>
    
    <item>
      <title>Channels in libuv</title>
      <link>https://navaneeth.github.io/post/channels-in-libuv/</link>
      <pubDate>Fri, 02 Aug 2013 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/channels-in-libuv/</guid>
      <description>go programming language provides a very powerful synchronization mechanism called channels. Channels simplifies communication between threads and makes it very easy to send and receive data from go routines.
I always missed such functionalities when using libuv. libuv has uv async_send, but it can be used only to wakeup the event loop. In this post, we will implement channels in C using libuv. The idea is to implement a channel so that user can use it without worrying about manually doing the synchronization.</description>
    </item>
    
    <item>
      <title>Building static and shared libraries using CMake</title>
      <link>https://navaneeth.github.io/post/building-static-and-shared-libraries-using-cmake/</link>
      <pubDate>Sun, 28 Jul 2013 13:02:25 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/building-static-and-shared-libraries-using-cmake/</guid>
      <description>Recently in libvarnam, I had to build a static and shared library from the same source files. This was much harder before CMake 2.8. From CMake 2.8.8, CMake has support for Object library which made it very simple.
Basic idea is to use add_library with OBJECT type. CMake will compile all the source files provided in this target and makes the object files for it. It won&amp;rsquo;t create a temporary static library with all these object files.</description>
    </item>
    
    <item>
      <title>How to use individual lines pulled from stdin in the middle of a command when using xargs</title>
      <link>https://navaneeth.github.io/post/how-to-use-individual-lines-pulled-from-stdin-in-the-middle-of-a-command-when-using-xargs/</link>
      <pubDate>Thu, 28 Feb 2013 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/how-to-use-individual-lines-pulled-from-stdin-in-the-middle-of-a-command-when-using-xargs/</guid>
      <description>xargs is very powerful commandline utility. Here is what Wikipedia says about xargs
 xargs is a command on Unix and most Unix-like operating systems used to build and execute command lines from standard input
 Most common use of xargs would be to do something like,
find . -type f -print0 | xargs -0 rm  Let us assume that you have a file with list of files to be downloaded from a website.</description>
    </item>
    
    <item>
      <title>How to upload files when testing using Selenium Webdriver</title>
      <link>https://navaneeth.github.io/post/how-to-upload-files-when-testing-using-selenium-webdriver/</link>
      <pubDate>Wed, 20 Feb 2013 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/how-to-upload-files-when-testing-using-selenium-webdriver/</guid>
      <description>You can use the following code to set a file path to the file upload control.
WebElement file = driver.findElement(By.id(&amp;quot;control_id&amp;quot;)); file.sendKeys(&amp;quot;/full/path/to/file&amp;quot;);  You need to pass full path to the sendKeys() for it to work. Otherwise sendKeys() fails silently.</description>
    </item>
    
    <item>
      <title>Is Thread.Sleep() evil?</title>
      <link>https://navaneeth.github.io/post/is-thread-dot-sleep-evil/</link>
      <pubDate>Tue, 19 Feb 2013 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/is-thread-dot-sleep-evil/</guid>
      <description>If you search for this topic, you will find lots of information and many of them claiming Thread.Sleep() is evil. However, I think this evilness is mostly dependent on which context Thread.Sleep() is used.
You might have seen code like the below one.
while (!exit) { DoWork(); Thread.Sleep(10000); }  This code example does some work and sleeps for 1 minute before does the job again. This simple example has some potential issues.</description>
    </item>
    
    <item>
      <title>Working with native code easily in C# with the help of C&#43;&#43;/CLI</title>
      <link>https://navaneeth.github.io/post/working-with-native-code-in-csharp-easily-with-cplusplus-cli/</link>
      <pubDate>Sun, 17 Feb 2013 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/working-with-native-code-in-csharp-easily-with-cplusplus-cli/</guid>
      <description>.NET comes with pretty good interoperability options which would enable unmanaged code to be used from a managed environment. In C#, to call a function which is available in a DLL, PInvoke (Platform invocation service) can be used. Here is what MSDN says.
 Platform Invocation Services (PInvoke) allows managed code to call unmanaged functions that are implemented in a DLL.
 This is very helpful when you need to call some system functions from your C# application.</description>
    </item>
    
    <item>
      <title>Simple, generic and dynamically allocated array in C</title>
      <link>https://navaneeth.github.io/post/simple-generic-and-dynamically-allocated-array-in-c/</link>
      <pubDate>Fri, 11 May 2012 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/simple-generic-and-dynamically-allocated-array-in-c/</guid>
      <description>C is a very good language. I have been using for quite some time for my opensource project. The flexibility C offers is really good. But sometimes, lack of simple datastructures like a dynamically growing array will slow down the programmer. There are tons of implementation available online, but most of them are overcomplicated, got lot of dependencies or tough to understand and incorporate with your application. In this post, I present a simple array which grows dynamically, reuses the memory, supports any pointer type and easy to copy to your code base.</description>
    </item>
    
    <item>
      <title>Simple egg timer on Linux for Pomodoro technique</title>
      <link>https://navaneeth.github.io/post/simple-egg-timer-on-linux-for-pomodoro-technique/</link>
      <pubDate>Sun, 19 Dec 2010 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/simple-egg-timer-on-linux-for-pomodoro-technique/</guid>
      <description>Recently I have started evaluating the Pomodoro Technique which I found quite interesting. I am still evaluating the technique and not yet concluded on whether I should continue using it.
To implement pomodoro technique, you need a kitchen timer or egg timer. Since I use pomodoro for my programming work, I obviously donâ€™t want to use a physical timer. I couldnâ€™t find a decent timer for linux especially one that works well with Xfce.</description>
    </item>
    
    <item>
      <title>Circular linked list â€“ An implementation using C#</title>
      <link>https://navaneeth.github.io/post/circular-linked-list-an-implementation-using-c-number/</link>
      <pubDate>Tue, 18 Aug 2009 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/circular-linked-list-an-implementation-using-c-number/</guid>
      <description>In this post, I will explain about creating a circular doubly linked list using C#. .NET framework provides a doubly linked list implementation in System.Collections.Generic.LinkedList class . But this class is not providing the behavior of a circular linked list and it is very tough to extend for supporting circular linked list requirements.
In a normal doubly linked list, each node will have a link to its previous and next nodes.</description>
    </item>
    
    <item>
      <title>What Great .NET Developers Ought To Know (More .NET Interview Questions and Answers) â€“ Part1</title>
      <link>https://navaneeth.github.io/post/what-great-net-developers-ought-to-know-net-interview-questions-and-answers-part1/</link>
      <pubDate>Thu, 13 Aug 2009 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/what-great-net-developers-ought-to-know-net-interview-questions-and-answers-part1/</guid>
      <description>In this series of posts, I will try to answer the questions posted by Scott Hanselman here. This part we will be seeing the first set of questions he has given under Everyone who writes code heading.
Q) Describe the difference between a Thread and a Process?
A Thread is a small unit of code in execution. A process is an instance of program which will have multiple threads running. A process can host multiple threads.</description>
    </item>
    
    <item>
      <title>ADO.NET best practices â€“ Reading data from data reader</title>
      <link>https://navaneeth.github.io/post/ado-dot-net-best-practices-reading-data-from-data-reader/</link>
      <pubDate>Sat, 11 Jul 2009 12:59:50 +0530</pubDate>
      
      <guid>https://navaneeth.github.io/post/ado-dot-net-best-practices-reading-data-from-data-reader/</guid>
      <description>I have seen many people using DataReader incorrectly. In this post, I will try to explain some good practices that can be followed when reading from a data reader. Consider the following problematic code,
SqlDataReader reader = /* ... */; while (reader.Read()) { string userName = reader[&amp;quot;user_name&amp;quot;].ToString(); int age = int.Parse( reader[&amp;quot;age&amp;quot;].ToString() ); /* ... */ } reader.Close();  How many problems can you figure out from the above code?</description>
    </item>
    
  </channel>
</rss>