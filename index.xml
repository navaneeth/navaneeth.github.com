<?xml version="1.0" encoding="utf-8" standalone="yes" ?>
<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom">
  <channel>
    <title>{love to code}</title>
    <link>http://blog.nkn.io/</link>
    <description>Recent content on {love to code}</description>
    <generator>Hugo -- gohugo.io</generator>
    <language>en-us</language>
    <lastBuildDate>Sat, 09 Sep 2017 14:40:26 +0530</lastBuildDate>
    <atom:link href="http://blog.nkn.io/index.xml" rel="self" type="application/rss+xml" />
    
    <item>
      <title>Bigdata buzz</title>
      <link>http://blog.nkn.io/post/bigdata-buzz/</link>
      <pubDate>Sat, 09 Sep 2017 14:40:26 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/bigdata-buzz/</guid>
      <description>&lt;p&gt;Bigdata is the new buzzword. Programmers take pride in working with Bigdata technologies. Unfortunately, most of them don&amp;rsquo;t have any clue about bigdata and the tools they claim to be using.&lt;/p&gt;

&lt;p&gt;Last few days, I was interviewing candidates for our team. We work on the so called big data tech. But our data is not yet big and we can get away with simple scripts for now. But we stil use tools like &lt;em&gt;Apache spark&lt;/em&gt;, &lt;em&gt;Kafka&lt;/em&gt; etc.&lt;/p&gt;

&lt;p&gt;The recruitment agency sent us few profiles all claiming to be experts in &lt;em&gt;Hadoop&lt;/em&gt;, &lt;em&gt;Hive&lt;/em&gt;, &lt;em&gt;Spark&lt;/em&gt; etc. The resumes looked really good and we called them for in-office interview.&lt;/p&gt;

&lt;p&gt;Surprisingly, none of them knew any of the technologies they mentioned in their resumes. I started with simple map-reduce questions. All of them were familiar with map-reduce concepts. But none applied it in practice.&lt;/p&gt;

&lt;p&gt;The problem was simple:- Read a text file using Spark and count the word occurances. Something simple like the following will do the trick&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-scala&#34;&gt;val result = sc.textFile(&amp;quot;data.txt&amp;quot;).flatMap(line =&amp;gt; line.split(&amp;quot; &amp;quot;)).map(word =&amp;gt; (word, 1)).reduceByKey((sum, wordCount) =&amp;gt; sum + wordCount)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Surprisingly, no one even reached till the first &lt;code&gt;flatMap&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;If you are someone who claim to be a Bigdata programmer the you should&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Ensure you understand the basics of Map &amp;amp; Reduce operations&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t learn just theory. Keep practicing until you master the subject&lt;/li&gt;
&lt;li&gt;Processing big data is not as fancy as it sounds. It is all about doing boring map and reduce operations&lt;/li&gt;
&lt;li&gt;Half of the requirements for big data are not real big data&lt;/li&gt;
&lt;li&gt;Don&amp;rsquo;t fall in the big data buzz and wrongly claim to be an expert&lt;/li&gt;
&lt;/ul&gt;
</description>
    </item>
    
    <item>
      <title>Rename cassandra keyspace</title>
      <link>http://blog.nkn.io/post/rename-cassandra-keyspace/</link>
      <pubDate>Fri, 08 Sep 2017 11:10:50 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/rename-cassandra-keyspace/</guid>
      <description>&lt;p&gt;Cassandra don&amp;rsquo;t allow renaming keyspaces. In reality, need to rename a keyspace rarely happens. It happened to me only once so far. But when you need to do it, there is no easy way to do.&lt;/p&gt;

&lt;p&gt;Cassandra gives &lt;code&gt;copy&lt;/code&gt; command which can be used to copy data as CSV and import that into another keyspace. But keyspace and table schema has to be created before using &lt;code&gt;copy&lt;/code&gt; command.&lt;/p&gt;

&lt;p&gt;I have created a small utility which will use the &lt;code&gt;copy&lt;/code&gt; command provided by cassandra and automate keyspace and table schema creation.&lt;/p&gt;

&lt;p&gt;This works for small data sets. I haven&amp;rsquo;t tested with really huge tables.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-ruby&#34;&gt;require &#39;fileutils&#39;
require &#39;tmpdir&#39;
require &#39;optparse&#39;

options = {}
OptionParser.new do |opts|
  opts.banner =  &amp;quot;usage: rename_keyspace --from &amp;lt;current-name&amp;gt; --to &amp;lt;new-name&amp;gt;&amp;quot;

  opts.on(&amp;quot;--from=name&amp;quot;, &amp;quot;Current keyspace name&amp;quot;) do |name|
    options[:from] = name
  end
  opts.on(&amp;quot;--to=name&amp;quot;, &amp;quot;New keyspace name&amp;quot;) do |name|
    options[:to] = name
  end

  opts.on(&amp;quot;--verbose&amp;quot;, &amp;quot;Verbose output&amp;quot;) do |v|
    options[:verbose] = v
  end

end.parse!

if options[:from] == nil or options[:to] == nil
  puts &amp;quot;from and to expected&amp;quot;
  exit(1)
end

dir = Dir.mktmpdir # temp working dir

from = options[:from]
to = options[:to]
keyspace_cmd_file = File.join(dir, &amp;quot;target_keyspace.cql&amp;quot;)
keyspace_cmd =  `cqlsh -e &amp;quot;describe #{from};&amp;quot;`.gsub(&amp;quot;KEYSPACE #{from}&amp;quot;, &amp;quot;KEYSPACE #{to}&amp;quot;).gsub(&amp;quot;#{from}\.&amp;quot;, &amp;quot;#{to}\.&amp;quot;)
File.write(keyspace_cmd_file, keyspace_cmd)

puts &amp;quot;create keyspace: #{to} and tables&amp;quot;
output = `cqlsh -f #{keyspace_cmd_file}`
puts output if options[:verbose]

puts &amp;quot;exporting data from #{options[:from]}&amp;quot;
tables = `cqlsh -e &amp;quot;use #{options[:from]}; describe tables;&amp;quot;`.split(&amp;quot; &amp;quot;)
tables.each do |table|
  full_path = File.join(dir, options[:from], &amp;quot;#{table}.csv&amp;quot;)
  FileUtils.mkdir_p(File.dirname(full_path))
  puts &amp;quot;Exporting #{options[:from]}.#{table} &amp;gt; #{full_path}&amp;quot;
  output = `cqlsh -e &amp;quot;copy  #{options[:from]}.#{table} to &#39;#{full_path}&#39;&amp;quot;`
  puts output if options[:verbose]

  puts &amp;quot;copy #{from}.#{table} to #{to}.#{table}&amp;quot;
  output = `cqlsh -e &amp;quot;copy  #{options[:to]}.#{table} from &#39;#{full_path}&#39;&amp;quot;`
  puts output if options[:verbose]
end

&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Here is a &lt;a href=&#34;https://gist.github.com/navaneeth/627e03a36b359c9e2440716d47c0a32d&#34;&gt;Gist&lt;/a&gt; on Github.&lt;/p&gt;

&lt;p&gt;To rename keyspace &lt;code&gt;keyspace1&lt;/code&gt; to &lt;code&gt;keyspace2&lt;/code&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-shell&#34;&gt;./ rename_keyspace.rb --from keyspace1 --to keyspace2
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This utility will look at the structure of &lt;code&gt;keyspace1&lt;/code&gt; and create &lt;code&gt;keyspace2&lt;/code&gt; with the same structure, replication strategy and table schema. It will move data from all tables to the new keyspace.&lt;/p&gt;

&lt;p&gt;This script won&amp;rsquo;t delete the old keyspace for safety reasons.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Onam</title>
      <link>http://blog.nkn.io/post/onam/</link>
      <pubDate>Mon, 04 Sep 2017 10:34:36 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/onam/</guid>
      <description>&lt;p&gt;I love &lt;a href=&#34;https://en.wikipedia.org/wiki/Onam&#34;&gt;Onam&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;It is an amazing festival which all Keralites celeberates without caste and religion. Onam happens when the weather is at it&amp;rsquo;s best. Right after monsoon rains, whole Kerala turns colorful to welcome Onam. This time is a celeberation for photography lovers.&lt;/p&gt;

&lt;p&gt;I made the below image on the Onam day. The mix includes, Canon 7D MKII, 100-400L and flash in high speed sync. This image was made at a stunning location named &lt;a href=&#34;https://en.wikipedia.org/wiki/Vallikkunnu&#34;&gt;Vallikkunnu&lt;/a&gt;,&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4383/36618484040_feee6d7303_h.jpg&#34; alt=&#34;Onam&#34; /&gt;&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>We got Leh’d!</title>
      <link>http://blog.nkn.io/post/leh-ladakh-bike-trip/</link>
      <pubDate>Thu, 06 Jul 2017 14:37:36 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/leh-ladakh-bike-trip/</guid>
      <description>

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/cover.jpg&#34; alt=&#34;Leh&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Feel like getting out of here? I am game- let me grab the bike keys and a map of Himalayas. Why Himalayas? Well, because Himalayas has always fascinated me. I have read countless books on Himalayan travel and nerve cracking experiences people had.&lt;/p&gt;

&lt;p&gt;This July (26th Jun 2017 to 5th July 2017), Anju and I took the courage and went for a Himalayan trip on a motorcycle. The trip was adventurous and fun filled. We were also anxious because we were leaving our son back at home for the first time. 12 days, without him!&lt;/p&gt;

&lt;p&gt;We started the journey by taking a flight to Chandigarh from Bangalore and then a taxi from there to Manali. We stayed at Manali for the night and collected our bike next day. A &lt;strong&gt;500CC&lt;/strong&gt; standard bullet, forest green color was ready to take us for the exciting journey.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/map.png&#34; alt=&#34;Leh&#34; /&gt;&lt;/p&gt;

&lt;h2 id=&#34;rohtang-pass:5ee31ffd85007dc3fa7bd133a3f161f0&#34;&gt;Rohtang pass&lt;/h2&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/rohtang1.jpg&#34; alt=&#34;Rohtang pass&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Unfortunately, we started riding on a national holiday, &lt;em&gt;Ramzan&lt;/em&gt;. Manali was crowded. We felt as though the whole world was at Manali. Small roads here in Manali were blocked by heavy traffic. It took us quite a bit of struggle to get out of Manali and start riding towards the mountains. The mountains were calling, but the city traffic is holding us back.&lt;/p&gt;

&lt;p&gt;Our first stop was at Rohtang pass.&lt;/p&gt;

&lt;p&gt;Rohtang pass was filled with tourists. If you hate the crowd, avoid this area.&lt;/p&gt;

&lt;p&gt;We were in a hurry to get out of traffic as early as possible. Right after Rohtang, we were greeted by a thick yellow board. It said - &lt;em&gt;Welcome to Lahaul &amp;amp; Spiti&lt;/em&gt;.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35365408040/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4259/35365408040_37b767c4aa_c.jpg&#34; alt=&#34;Welcome to Lahaul &amp;amp; Spiti&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By now, the crowd had cleared up and we were the only ones in the road. Prisctine Himalayas!&lt;/p&gt;

&lt;p&gt;We were driving on the Leh - Manali highway. Even though it is a highway, only a small stretch of the roads were good. Rest all are mostly off road. It was my first experience with mountain roads like this.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/34912816224/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4253/34912816224_6f75eb6880_c.jpg&#34; alt=&#34;Leh - Manali highway&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We were enjoying the blue sky, bumpy roads and the &lt;a href=&#34;https://en.wikipedia.org/wiki/Dhaba&#34;&gt;&lt;em&gt;dhabas&lt;/em&gt;&lt;/a&gt; decorated with Tibetan prayer flags.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35623489881/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4071/35623489881_9b64fbf42d_c.jpg&#34; alt=&#34;Tibetan prayer flags&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We are usually wary of organized tours. But in this case, even though it was an organized tour, we had full freedom to take as many stops as we need and capture the himalayan beauty.&lt;/p&gt;

&lt;p&gt;The valley was beautiful, weather was nice. We felt like we were in a wonderland.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/34914105554/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4217/34914105554_f3d48b50a9_c.jpg&#34; alt=&#34;Wonderland&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;By evening, we reached our first camp site, &lt;a href=&#34;https://en.wikipedia.org/wiki/Jispa&#34;&gt;Jispa&lt;/a&gt;.&lt;/p&gt;

&lt;h2 id=&#34;jispa:5ee31ffd85007dc3fa7bd133a3f161f0&#34;&gt;Jispa&lt;/h2&gt;

&lt;p&gt;Jispa camp site is located on the shores of &lt;a href=&#34;https://en.wikipedia.org/wiki/Chenab_River&#34;&gt;&lt;em&gt;Chenab River&lt;/em&gt;&lt;/a&gt;.&lt;/p&gt;

&lt;p&gt;We spent a pleasant morning looking at the timeless Chenab river. The serene landscape offered us a lot of photographic opportunities.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/34977664783/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4205/34977664783_2a0194896d_c.jpg&#34; alt=&#34;Shores of chenab river&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Jispa was the best camp site we stayed during our journey. Terrain was full of flowers and small streams.&lt;/p&gt;

&lt;p&gt;Most of us do farming by choice. For them, it is a necessity. Farming helps them to sustain the heavy winter isolation and keep them busy all the time. We saw potatoes, cauliflower etc in the farms.&lt;/p&gt;

&lt;p&gt;It was time to bid adieu to the beautiful Jispa. Ride from Jispa to Sarchu was short. We left Jispa by morning 10AM.&lt;/p&gt;

&lt;p&gt;In this stretch, bikes had to cross several small/medium water streams. It was my first time experience in riding through the streams. Riding through streams looks very easy, but pretty hard to do.&lt;/p&gt;

&lt;p&gt;We rode through Bara-lacha-la pass.&lt;/p&gt;

&lt;p&gt;Saw &lt;a href=&#34;https://en.wikipedia.org/wiki/Suraj_Tal&#34;&gt;Suraj Tal&lt;/a&gt;, the sacred body of water. It is one of the highest lakes in India.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35724406951/in/photostream/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4255/35724406951_ebb35e45c9_c.jpg&#34; alt=&#34;Suraj Tal&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;sarchu:5ee31ffd85007dc3fa7bd133a3f161f0&#34;&gt;Sarchu&lt;/h2&gt;

&lt;p&gt;Our ride was beautiful and intense as usual. We had to cross few water streams and it was a challenging task to push the bikes through the flowing stream.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/water-crossing.jpg&#34; alt=&#34;Water crossing&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Sarchu is a major camp location for the travellers to Leh. There are temporary tents installed for camping.&lt;/p&gt;

&lt;p&gt;Sarchu is at 14,000ft and it is too windy and too cold there. We faced altitude sickness for the first time. Heavy headache, nausea, vomiting etc. Taking a pain-killer tablet fixed it for us.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35623616562/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4283/35623616562_7a4729a27a_c.jpg&#34; alt=&#34;Sarchu&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;leh:5ee31ffd85007dc3fa7bd133a3f161f0&#34;&gt;Leh&lt;/h2&gt;

&lt;p&gt;Today the route was: Sarchu -&amp;gt; Gata loops -&amp;gt; Lachalung la -&amp;gt; Pang -&amp;gt; Moore plains -&amp;gt; Taglang La -&amp;gt; Upshi -&amp;gt; Leh.&lt;/p&gt;

&lt;p&gt;Ride from Sarchu to Leh was mixed terrains. We passed through high altitude passes (Nakeela, Lachalung la and Taglang La). Taglang La offered us an exciting experience of heavy snow fall along with rain.&lt;/p&gt;

&lt;p&gt;The drive till Gata loops is straight road and comparatively easy to ride.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/sarchu-2.jpg&#34; alt=&#34;Sarchu&#34; /&gt;&lt;/p&gt;

&lt;p&gt;After taking a short break at Pang, we headed towards &lt;a href=&#34;https://en.wikipedia.org/wiki/More_plains&#34;&gt;Moore plains&lt;/a&gt;. Straight stretch of roads untill the climb begins to Taglang La. We had a temptation to speed up but we didn&amp;rsquo;t. This stretch of straight roads were full of small bumps and surprises. Many people in our team fell down and got injured.&lt;/p&gt;

&lt;p&gt;Riding motorcycle is very liberating. We felt closer to the nature and the people around us. We had lots of random conversations with people in the villages. They were all nice and friendly.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/34983663653/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4279/34983663653_25d5e09bca_c.jpg&#34; alt=&#34;Riding motorcycle&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Taglang La:&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/tangla1.jpg&#34; alt=&#34;Taglang La&#34; /&gt;&lt;/p&gt;

&lt;p&gt;On the way, you will see many cyclists. They were cycling from Manali to Leh.&lt;/p&gt;

&lt;p&gt;Taglang La wins it&amp;rsquo;s share of crowds by being absolutely beautiful.&lt;/p&gt;

&lt;p&gt;You can find lots of &lt;a href=&#34;https://en.wikipedia.org/wiki/Stupa&#34;&gt;Stupas&lt;/a&gt; on the side of the road. &lt;a href=&#34;https://en.wikipedia.org/wiki/Indus_River&#34;&gt;Indus river&lt;/a&gt; flowing on the other side of the road compliments the scene.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35623616562/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4213/35404803430_33450d9512_c.jpg&#34; alt=&#34;Stupa&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Leh is a small city. Beautiful, but crowded. We stayed at a small hotel, enjoying the rain and hot coffee.&lt;/p&gt;

&lt;p&gt;Fantastic evening lights around &lt;a href=&#34;https://en.wikipedia.org/wiki/Shanti_Stupa&#34;&gt;Shanti Stupa&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35662046971/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4259/35662046971_c3c5f48987_c.jpg&#34; alt=&#34;Shanti stupa&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;We woke up the next day hearing the bad news. It was raining everywhere. Roads to Khardungla was closed. Rain was not expected at this time of year at Leh. But there we had heavy rain and flooded roads. We had to cancel Khardungla and spent a day exploring Leh.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/lehcity.jpg&#34; alt=&#34;Leh city&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Leh has planted many trees around during a tree plantation drive. So it looks green everywhere.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/lehcity2.jpg&#34; alt=&#34;Leh city&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We visited, &lt;em&gt;Shey palace&lt;/em&gt;, &lt;em&gt;Thikse monastry&lt;/em&gt;, local residential school and ended our day visiting the mall road. Leh city gave us no blue sky, only the color-less one.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35985477602/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4314/35985477602_e79137e0ff_c.jpg&#34; alt=&#34;Shey palace&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Next day morning, we went to Khardungla. Thick snow and fog covered the roads. Visibility was absolutely minimum. We were advised not to go up because the climate was bad.&lt;/p&gt;

&lt;p&gt;We were bathed in snow. Clouds was so close to us. We were at 18,000ft!&lt;/p&gt;

&lt;p&gt;![Khardungla][khardungla1]&lt;/p&gt;

&lt;p&gt;I went out to see evening lights lighting up the mountains. But I was disappointed because of the weather.&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35314548834/in/dateposted-public/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4329/35314548834_fa1d301b5a_h.jpg&#34; alt=&#34;Distant view of Leh&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;h2 id=&#34;pangong-lake:5ee31ffd85007dc3fa7bd133a3f161f0&#34;&gt;Pangong lake&lt;/h2&gt;

&lt;p&gt;The famous tourist spot from the Hindi movie, &lt;a href=&#34;http://www.imdb.com/title/tt1187043/&#34;&gt;3 Idiots&lt;/a&gt;. This lake is around 150Km from Leh, very close to India-China border. It is a beautiful lake and drive to there was as usual, stunning!&lt;/p&gt;

&lt;p&gt;During this journey, we passed through &lt;a href=&#34;https://en.wikipedia.org/wiki/Chang_La&#34;&gt;Chang La (17590ft)&lt;/a&gt;, the second highest motorable road in the world. Whole pass was covered in snow and offered us a stunning view.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/changla1.jpg&#34; alt=&#34;Changla&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Pangong is situated in a beautiful valley. Surrounded by mountains. The whole terrain was rough &amp;amp; beatiful.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/pangong3.jpg&#34; alt=&#34;Roads to pangong&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Yak at Pangong:&lt;/p&gt;

&lt;p&gt;&lt;a href=&#34;https://www.flickr.com/photos/navaneethkn/35723893991/in/photostream/lightbox/&#34;&gt;&lt;img src=&#34;https://c1.staticflickr.com/5/4234/35723893991_86b82509d5_c.jpg&#34; alt=&#34;Yak at Pangong&#34; /&gt;&lt;/a&gt;&lt;/p&gt;

&lt;p&gt;Flying high with joy&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/pangong2.jpg&#34; alt=&#34;Floating above Pangong&#34; /&gt;&lt;/p&gt;

&lt;p&gt;We started our return journey the next day. We passed through the same route back to Manali. We saw everything once again on the way back. It is hard to take eyes off from the beautiful valleys and mountains.&lt;/p&gt;

&lt;p&gt;Himalayas is an experience. Like my colleague said, &amp;ldquo;&lt;em&gt;you can&amp;rsquo;t ride pass Himalayas. You have to be there. Experience it&lt;/em&gt;&amp;rdquo;. No words or pictures can express that feeling of being there. For us, it was a lifetime experience. We felt the need to do more road trips and was already charged up for the next one.&lt;/p&gt;

&lt;h1 id=&#34;planning-tips:5ee31ffd85007dc3fa7bd133a3f161f0&#34;&gt;Planning tips&lt;/h1&gt;

&lt;p&gt;Manali - Leh trip is not too tough. But not too easy too. Planning it properly makes the experience much better.&lt;/p&gt;

&lt;ol&gt;
&lt;li&gt;Never trust the weather forecast / reports. Weather there is very unpredictable&lt;/li&gt;
&lt;li&gt;Always carry enough woolen cloths&lt;/li&gt;
&lt;li&gt;Be sure to carry rain coats, water proof boots etc&lt;/li&gt;
&lt;li&gt;Drink more water and keep yourself hydrated. Altitude sickness is very common and keeping hydrated helps. &lt;a href=&#34;https://en.wikipedia.org/wiki/Hydration_pack&#34;&gt;Hydration pack&lt;/a&gt; helped us a lot&lt;/li&gt;
&lt;li&gt;Carry enough medicines. &lt;em&gt;Diamox&lt;/em&gt; tablets help reduce altitude sickness&lt;/li&gt;
&lt;li&gt;Drive carefully, roads are very slippery&lt;/li&gt;
&lt;li&gt;Get padded cycling shorts. This helps you to sit for longer in the saddle&lt;/li&gt;
&lt;li&gt;Sunglasses&lt;/li&gt;
&lt;li&gt;Sunscreen lotion. Get a good one. You will need lots of this&lt;/li&gt;
&lt;li&gt;Pack lightly. Don&amp;rsquo;t pack too much stuff&lt;/li&gt;
&lt;li&gt;Get a good camera gear. GoPro etc helps you to create great videos and can be mounted on to the helmet&lt;/li&gt;
&lt;li&gt;Good quality weather proof gloves&lt;/li&gt;
&lt;li&gt;Take lots of breaks and photos. Freezing time through pictures is the best way to remember the brief moments&lt;/li&gt;
&lt;/ol&gt;

&lt;hr /&gt;

&lt;p&gt;Travelling is liberating. Don&amp;rsquo;t restrict yourself to your own comfort zones. Have conversations with strangers, make new friends, laugh like crazy and enjoy the trip to the maximum.&lt;/p&gt;

&lt;p&gt;&lt;img src=&#34;http://blog.nkn.io/imgs/2017/07/wetwo.jpg&#34; alt=&#34;Navaneeth &amp;amp; Anju&#34; /&gt;&lt;/p&gt;

&lt;p&gt;Keep travelling&amp;hellip;&lt;/p&gt;

&lt;p&gt;[khardungla1]: /imgs/2017/07/khardungla1.jpg&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Accessing nested keys from a map in Elixir</title>
      <link>http://blog.nkn.io/post/accessing-nested-keys-from-a-map-in-elixir/</link>
      <pubDate>Tue, 14 Jun 2016 19:01:04 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/accessing-nested-keys-from-a-map-in-elixir/</guid>
      <description>&lt;p&gt;Erlang VM is a powerful pattern matching system. Pattern matching comes very handy when you want to access nested fields in a map.&lt;/p&gt;

&lt;p&gt;Recently at work, I had to parse a large JSON and extract value of a key. This post shows how you can use pattern matching to extract deeply nested values from a JSON.&lt;/p&gt;

&lt;p&gt;Here is a sample JSON&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;&amp;quot;apiGroups&amp;quot;: {
    &amp;quot;affiliate&amp;quot;: {
      &amp;quot;name&amp;quot;: &amp;quot;affiliate&amp;quot;,
      &amp;quot;apiListings&amp;quot;: {
        &amp;quot;televisions&amp;quot;: {
          &amp;quot;availableVariants&amp;quot;: {
            &amp;quot;v1.1.0&amp;quot;: {
              &amp;quot;resourceName&amp;quot;: &amp;quot;televisions&amp;quot;,
              &amp;quot;get&amp;quot;: &amp;quot;https://affiliate-api.flipkart.net/affiliate/1.0/feeds/16/category/ckf-czl.json?expiresAt=1465939211609&amp;amp;sig=6ef13e817f5e7a3e974407e766e82ddc&amp;quot;,
              &amp;quot;deltaGet&amp;quot;: &amp;quot;https://affiliate-api.flipkart.net/affiliate/1.0/deltaFeeds/16/category/ckf-czl.json?expiresAt=1465939211609&amp;amp;sig=6ef13e817f5e7a3e974407e766e82ddc&amp;quot;,
              &amp;quot;post&amp;quot;: null,
              &amp;quot;put&amp;quot;: null,
              &amp;quot;delete&amp;quot;: null
            },
          }
        }
      }
    }
  }
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;From this, I have to extract the value for the key &lt;code&gt;get&lt;/code&gt;.&lt;/p&gt;

&lt;p&gt;Here is how you can pattern match and extract the value:&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;  defp get_product_url(category) do
    case HTTPotion.get(&amp;quot;https://affiliate-api.flipkart.net/affiliate/api/.....&amp;quot;) do
      %HTTPotion.Response{body: body, status_code: 200} -&amp;gt;
        %{&amp;quot;apiGroups&amp;quot; =&amp;gt;
          %{&amp;quot;affiliate&amp;quot; =&amp;gt;
            %{&amp;quot;apiListings&amp;quot; =&amp;gt;
              %{^category =&amp;gt;
                %{&amp;quot;availableVariants&amp;quot; =&amp;gt;
                  %{&amp;quot;v1.1.0&amp;quot; =&amp;gt;
                    %{&amp;quot;get&amp;quot; =&amp;gt; product_url}
                  }
                }
              }
            }
          }
        } = Poison.decode!(body)
        product_url
      %HTTPotion.ErrorResponse{message: reason} -&amp;gt;
        Logger.error reason
    end
  end
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Did you notice the &lt;code&gt;^category&lt;/code&gt;? In this case, we are using value of &lt;code&gt;category&lt;/code&gt; as the key. &lt;code&gt;^&lt;/code&gt; symbol tells Elixir to expand the variable.&lt;/p&gt;

&lt;p&gt;Caveat: Using this style, you will get cryptic error message which just says right hand side values can&amp;rsquo;t be matched with left hand side in case of wrong data format. Thus, use this carefully in situations where you are sure about the data format.&lt;/p&gt;

&lt;p&gt;Pretty neat!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>oh my jackson!</title>
      <link>http://blog.nkn.io/post/oh-my-jackson/</link>
      <pubDate>Wed, 30 Dec 2015 18:30:50 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/oh-my-jackson/</guid>
      <description>&lt;p&gt;&lt;a href=&#34;https://github.com/FasterXML/jackson&#34;&gt;Jackson&lt;/a&gt; just made my day!&lt;/p&gt;

&lt;p&gt;Today, I had to make some changes to one of our API. The change was minor so I have added additional fields into my JSON response. I have also kept the old fields just to make the existing clients happy.&lt;/p&gt;

&lt;p&gt;During testing, I figured out that the change breaks existing clients. I was surprised! The error was,&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;org.codehaus.jackson.map.exc.UnrecognizedPropertyException: Unrecognized field &amp;ldquo;image&amp;rdquo; (Class Promotion), not marked as ignorable&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Alright; I thought. Android developer must be a very strict guy and failing when the response structure has additional fields.&lt;/p&gt;

&lt;p&gt;But he was not doing anything explicit to make the parsing strict.&lt;/p&gt;

&lt;p&gt;It looks like, Jackson&amp;rsquo;s by default parsing mode is strict and it fails when there are any extra fields. Stupid! I have never seen any JSON parser doing this. I have used Ruby, C#, Golang and everywhere no library will have this option turned on by default.&lt;/p&gt;

&lt;p&gt;Now this caused additional pain and I had to introduce another version of the API. We have also configured Jackson not to do strict parsing.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Upgrading blog to hugo</title>
      <link>http://blog.nkn.io/post/upgrading-blog-to-hugo/</link>
      <pubDate>Sat, 26 Dec 2015 22:25:29 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/upgrading-blog-to-hugo/</guid>
      <description>&lt;p&gt;I always wanted to try out &lt;a href=&#34;http://gohugo.io/&#34;&gt;Hugo&lt;/a&gt; but never got a chance to do it. I spent some time today and migrated my Octopress blog to Hugo. So far, I am liking it. I didn&amp;rsquo;t find a theme which matches my expectations, but the default one and few others are good enough to get started.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Bringing business ideas to live in 3 months</title>
      <link>http://blog.nkn.io/post/Bringing%20business%20ideas%20to%20live%20in%203%20months/</link>
      <pubDate>Sat, 26 Dec 2015 12:26:42 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/Bringing%20business%20ideas%20to%20live%20in%203%20months/</guid>
      <description>

&lt;p&gt;Early July, we started working with 2 ex-yahoo friends who had a nice product idea that they wanted to make it live. They had some screen designs on paper and clear cut vision on what the product should look like.&lt;/p&gt;

&lt;p&gt;We started with the development, post a week of ideation and technical spikes, and guess what, we had MVP ready for a limited user release in less than 9 weeks and a full production version by the end of October.&lt;/p&gt;

&lt;p&gt;The product is called &lt;a href=&#34;http://www.shopinsync.com/&#34;&gt;ShopInSync&lt;/a&gt;.&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It enables a user to search through millions of products from top ecommerce sites like Flipkart, Snapdeal, and Amazon, and compare prices and offers before buying.&lt;/p&gt;

&lt;p&gt;The app lets shoppers consult their family and friends too – through an integrated messaging service. That is important in a country like India, where even minor shopping decisions can be influenced by social factors.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Here are some screenshots&lt;/p&gt;

&lt;p&gt;
&lt;figure &gt;
    
        &lt;img src=&#34;http://blog.nkn.io/imgs/2015/12/unnamed.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Browse millions of products&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://blog.nkn.io/imgs/2015/12/unnamed3.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Chat with friends and family about products&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://blog.nkn.io/imgs/2015/12/unnamed1.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;Compare price across different stores&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;


&lt;figure &gt;
    
        &lt;img src=&#34;http://blog.nkn.io/imgs/2015/12/unnamed4.png&#34; /&gt;
    
    
    &lt;figcaption&gt;
        &lt;h4&gt;See all previous chats&lt;/h4&gt;
        
    &lt;/figcaption&gt;
    
&lt;/figure&gt;
&lt;/p&gt;

&lt;h2 id=&#34;from-design-to-implementation:44ca01d4ee143ac56b0530eee2388f0a&#34;&gt;From design to implementation&lt;/h2&gt;

&lt;p&gt;We started small. 4 member team working full time on Android, REST services and the feed pipeline. We used weekly iterations and delivered clear cut features every week. Slowly we could see the product shaping up. We were able to unblock each of us so that we could progress in parallel and faster.&lt;/p&gt;

&lt;p&gt;The team had not much of overhead. Tasks was prioritized using &lt;a href=&#34;http://asana.com/&#34;&gt;Asana&lt;/a&gt;. We do a weekly plan every Monday and did an internal release every Friday. Build was automated using Jenkins. Every code check-in trigger a Jenkins build. &lt;em&gt;Jenkins-bot&lt;/em&gt; reports the build status to our Slack channel. We had a single testing server where we can deploy via Jenkins using Ansible. Automating most of the repeated tasks allowed us to move faster and very less time was spent on maintaining the environments.&lt;/p&gt;

&lt;p&gt;We were using many &lt;em&gt;SaaS&lt;/em&gt; services, as much as we could. &lt;em&gt;ElasticCache&lt;/em&gt;, &lt;em&gt;Amazon RDS&lt;/em&gt; etc. This also reduced the time spent on maintaining different environments. By late October, we made the first beta release to a closed circle!&lt;/p&gt;

&lt;h2 id=&#34;beta-testing-with-friends-and-family:44ca01d4ee143ac56b0530eee2388f0a&#34;&gt;Beta testing with friends and family&lt;/h2&gt;

&lt;p&gt;Team identified and reached out to a small set of people who helped us in beta testing the application. Many feedback, suggestions, pain points are all addressed. This is the best part in the overall product design cycle. You get to see how people actually see and use the application. Lot of ideas got validated and we were confident that we can move to the public launch.&lt;/p&gt;

&lt;h2 id=&#34;scaling-to-millions-production-setup:44ca01d4ee143ac56b0530eee2388f0a&#34;&gt;Scaling to millions - Production setup&lt;/h2&gt;

&lt;p&gt;Production setup was another interesting part in the whole game. We had to support many concurrent users and we have pretty huge data too. Production setup was on Amazon AWS. A cluster of EC2 machines, load-balanced using &lt;em&gt;AWS Elastic Load Balancer&lt;/em&gt; acted as the front-end servers. &lt;em&gt;PostgreSQL&lt;/em&gt; running &lt;em&gt;Amazon RDS&lt;/em&gt; with a read replica mode is the database server. All of them was created in a separate VPC.&lt;/p&gt;

&lt;p&gt;Here is the server details:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;3 Front end servers (&lt;em&gt;m4.xlarge&lt;/em&gt;) running &lt;em&gt;Ruby On Rails&lt;/em&gt; load balanced using &lt;em&gt;ELB&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;em&gt;PostgreSQL&lt;/em&gt; master and read replica running on &lt;em&gt;Amazon RDS&lt;/em&gt;&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;https://github.com/mperham/sidekiq/&#34;&gt;Sidekiq&lt;/a&gt; for background processing. 350 workers processing different queues, like search indexing etc&lt;/li&gt;
&lt;li&gt;Redis cluster of size 3 (&lt;em&gt;cache.r3.large&lt;/em&gt;) on &lt;em&gt;Amazon elastic cache service&lt;/em&gt; is used for the caching layer&lt;/li&gt;
&lt;li&gt;&lt;em&gt;Elastic search&lt;/em&gt; cluster with 6 nodes powering the search index and aggregations&lt;/li&gt;
&lt;li&gt;Cloundfront CDN&lt;/li&gt;
&lt;li&gt;&lt;a href=&#34;http://layer.com/&#34;&gt;Layer&lt;/a&gt; for messaging&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;The above setup had enough room for supporting many concurrent users. We also came up with a plan to scale up if the traffic spikes really high.&lt;/p&gt;

&lt;p&gt;We had huge data to process too. Here is some of the statistics&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;We had most of the products from Amazon, Flipkart and Snapdeal. PostgreSQL DB holds 30+ million records.&lt;/li&gt;
&lt;li&gt;Elastic search index also holds 30+ million products&lt;/li&gt;
&lt;li&gt;API uses heavy use of cache and it caches as much as possible for high performance&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;With all of these, we were able to achieve the following&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;All of the API endpoints responded with an average latency of 200-300ms&lt;/li&gt;
&lt;li&gt;All long running calculations are done in the background jobs causing no blocking for API clients&lt;/li&gt;
&lt;li&gt;Load balancing provided high availability and throughput&lt;/li&gt;
&lt;li&gt;Database queries performed really well with the indices on frequently used columns&lt;/li&gt;
&lt;li&gt;Search index was returning search results with milliseconds&lt;/li&gt;
&lt;/ul&gt;

&lt;h2 id=&#34;press-release:44ca01d4ee143ac56b0530eee2388f0a&#34;&gt;Press release&lt;/h2&gt;

&lt;p&gt;Product release is incomplete without some publicity. ShopInSync received very good publicity. Many national and local new papers covered the story.&lt;/p&gt;

&lt;p&gt;From &lt;a href=&#34;http://techcircle.vccircle.com/2015/11/26/shopinsync-makes-online-shopping-a-collaborative-experience/&#34;&gt;Techcircle&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;“With the e-commerce sector booming and expanding, we realised that consumers have multiple options to choose from when it comes to online shopping. What we also comprehended is most of these purchases are done in consultation with friends and family. So the idea behind ShopinSync is to bring these two worlds together and make online shopping a more convenient process for the shoppers,” Raj Ramaswamy, co-founder, ShopInSync, told Techcircle.in.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From &lt;a href=&#34;http://www.thehindu.com/business/Industry/silicon-valley-investors-back-shopinsync-app/article7909227.ece?utm_source=RSS_Feed&amp;amp;utm_medium=RSS&amp;amp;utm_campaign=RSS_Syndication&#34;&gt;The Hindu&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;A group of Silicon Valley-based investors, including Vijay Ragavan, former head of engineering at Internet company,Yahoo, are backing a four-month-old ecommerce technology startup ShopInSync.&lt;/p&gt;

&lt;p&gt;The firm has built an app that enables shoppers to search and buy products from various online retailers such as Flipkart, Snapdeal and Amazon by integrating them on to a single platform. The app, which was released on Monday on Google&amp;rsquo;s Android platform, offers features such as comparison of product prices. It also enables consumers to collaborate with friends and family to buy products via an integrated messaging service.&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;From &lt;a href=&#34;https://www.techinasia.com/exyahoo-friends-human-shop&#34;&gt;TechInAsia&lt;/a&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;It happens often. You impulse-buy a gadget and end up regretting it. If your best friend had been around, you might have known of a smarter, cheaper, alternative in the store next door. That’s equally true of clothes, furniture, and a zillion other things.&lt;/p&gt;

&lt;p&gt;Friends and family often hold the key to a happy purchase. They help you make an informed choice and pick the right stuff – especially when you are buying online. But how do you get them to see and approve from miles away?&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;It was an awesome experience to watch the monitoring dashboards and seeing traffic spiking. The kick that you get from seeing this can only be experienced!&lt;/p&gt;

&lt;h2 id=&#34;road-forward:44ca01d4ee143ac56b0530eee2388f0a&#34;&gt;Road forward&lt;/h2&gt;

&lt;p&gt;Journey continues. There will be more new features, more stores and many more performance improvements. We plan to release iOS first week on January.&lt;/p&gt;

&lt;p&gt;You have an idea, now what? Just contact us to get started.&lt;/p&gt;

&lt;p&gt;Cheers!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Function strdup implicitly converted to pointer</title>
      <link>http://blog.nkn.io/post/Function%20strdup%20implicitly%20converted%20to%20pointer/</link>
      <pubDate>Thu, 21 May 2015 10:50:48 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/Function%20strdup%20implicitly%20converted%20to%20pointer/</guid>
      <description>&lt;p&gt;I was trying to make a debian package for &lt;a href=&#34;http://varnamproject.com&#34;&gt;libvarnam&lt;/a&gt;. Lot of work went into making the package ready. Debian has very strict rules about how the packaging should be done. Debian also marks few errors as fatal and which may require a code change to fix it. One of the errors I faced was the following:&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;Our automated build log filter detected the problem(s) above that will
likely cause your package to segfault on architectures where the size of
a pointer is greater than the size of an integer, such as ia64 and amd64.&lt;/p&gt;

&lt;p&gt;This is often due to a missing function prototype definition.&lt;/p&gt;

&lt;p&gt;Since use of implicitly converted pointers is always fatal to the application
on ia64, they are errors. Please correct them for your next upload.&lt;/p&gt;

&lt;p&gt;More information can be found at: &lt;a href=&#34;http://wiki.debian.org/ImplicitPointerConversions&#34;&gt;http://wiki.debian.org/ImplicitPointerConversions&lt;/a&gt;&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;The above error failed the build.&lt;/p&gt;

&lt;p&gt;The relevant code where the failure happened looks like the following:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;char*
strbuf_get_last_unicode_char(strbuf *word)
{
  varray *characters = NULL;
  char *lastUnicodeChar = NULL;
  characters = strbuf_chars(word);

  if (varray_is_empty (characters)) {
    varray_free (characters, NULL);
    return NULL;
  }

  lastUnicodeChar = strdup ((const char*) varray_get(characters, varray_length(characters) - 1)); /* -&amp;gt; Error here */
  varray_free(characters, &amp;amp;free);
  /*ending should be freed in the calling function*/
  return lastUnicodeChar;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;strdup&lt;/code&gt; is not a ANSI C function, hence it is not portable and not available with all compilers. This has caused the function prototype to be not found. When a function prototype is missing, gcc by default return an integer value. De-referencing the returned pointer will cause a segfault.&lt;/p&gt;

&lt;p&gt;To fix this, I found a portable &lt;code&gt;strdup&lt;/code&gt; implementation in the OpenBSD source code. I have used that and disabled the default &lt;code&gt;strdup&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>document.ready() handler not getting fired   Rails4</title>
      <link>http://blog.nkn.io/post/document.ready%28%29%20handler%20not%20getting%20fired%20-%20Rails4/</link>
      <pubDate>Tue, 18 Nov 2014 12:55:32 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/document.ready%28%29%20handler%20not%20getting%20fired%20-%20Rails4/</guid>
      <description>&lt;p&gt;Rails4 uses a gem called &lt;a href=&#34;https://github.com/rails/turbolinks&#34;&gt;turbolinks&lt;/a&gt; which makes following links on the web application faster. This gem is added to the Gemfile by default when a new rails project is initialized. However, there are few side effects this can cause.&lt;/p&gt;

&lt;p&gt;Consider the following JS, added into app/assets/javascripts/projects.js:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-javascript&#34;&gt;$(function () {
  $(&#39;#startDate&#39;).datetimepicker({
		pickTime: false
	});
});
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This looks alright, but won&amp;rsquo;t work as expected.&lt;/p&gt;

&lt;p&gt;When rails navigates to the page following a link, turbolink comes into picture and makes it faster by caching the JS contents. This leads into the ready handler not being fired. Which means, the datetimepicker used in the above example won&amp;rsquo;t work without a full page refresh.&lt;/p&gt;

&lt;p&gt;Luckily, this can be fixed by using &lt;a href=&#34;https://github.com/kossnocorp/jquery.turbolinks&#34;&gt;jquery.turbolinks&lt;/a&gt; gem which works with turbolinks gem ensures the ready handlers are called.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Hiding menu when clicking outside - AngularJS</title>
      <link>http://blog.nkn.io/post/Hiding%20menu%20when%20clicking%20outside%20-%20AngularJS/</link>
      <pubDate>Sun, 28 Sep 2014 11:29:28 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/Hiding%20menu%20when%20clicking%20outside%20-%20AngularJS/</guid>
      <description>&lt;p&gt;Assume you have a menu which looks like the following:&lt;/p&gt;

&lt;div class=&#34;highlight&#34;&gt;&lt;pre&gt;&lt;code class=&#34;language-html&#34; data-lang=&#34;html&#34;&gt;&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;right-menu&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ng-click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;toggleMenu($event);&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;img&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;src&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;img/RightMenuIcon.png&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;alt&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;&amp;quot;&lt;/span&gt; &lt;span class=&#34;p&#34;&gt;/&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;

&lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ng-show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;menuOpened&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;menu-dropdown-right&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ng-hide&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;loggedIn&amp;quot;&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;class&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;class&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;#/authenticate&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Login&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;ng-show&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;loggedIn&amp;quot;&lt;/span&gt;  &lt;span class=&#34;na&#34;&gt;ng-click&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;logOut()&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&amp;lt;&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt; &lt;span class=&#34;na&#34;&gt;href&lt;/span&gt;&lt;span class=&#34;o&#34;&gt;=&lt;/span&gt;&lt;span class=&#34;s&#34;&gt;&amp;quot;#&amp;quot;&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;Logout&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;a&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
    &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;li&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
  &lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;ul&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;span class=&#34;p&#34;&gt;&amp;lt;/&lt;/span&gt;&lt;span class=&#34;nt&#34;&gt;div&lt;/span&gt;&lt;span class=&#34;p&#34;&gt;&amp;gt;&lt;/span&gt;
&lt;/code&gt;&lt;/pre&gt;&lt;/div&gt;


&lt;p&gt;When the div gets a click event, angular calls &lt;code&gt;toggleMenu&lt;/code&gt; which toggles the &lt;code&gt;menuOpened&lt;/code&gt; variable. Changing the value of this variable in turn makes the div show/hide.&lt;/p&gt;

&lt;p&gt;To hide the menu when clicking outside of the div, we add a &lt;code&gt;onclick&lt;/code&gt; handler to &lt;code&gt;window&lt;/code&gt; object which checks the &lt;code&gt;menuOpened&lt;/code&gt; variable and updates it if the menu is visible.&lt;/p&gt;

&lt;p&gt;Here is the code for &lt;code&gt;MenuCtrl&lt;/code&gt; and the &lt;code&gt;onclick&lt;/code&gt; handler:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-js&#34;&gt;angularApp.controller(&#39;MenuCtrl&#39;, [&#39;$scope&#39;, &#39;$location&#39;, &#39;$rootScope&#39;,

  function($scope, $location, $rootScope) {

		$scope.menuOpened = false;

		$scope.toggleMenu = function(event) {
			$scope.menuOpened = !($scope.menuOpened);

      // Important part in the implementation
      // Stopping event propagation means window.onclick won&#39;t get called when someone clicks
      // on the menu div. Without this, menu will be hidden immediately
			event.stopPropagation();
		};

		window.onclick = function() {
			if ($scope.menuOpened) {
				$scope.menuOpened = false;

        // You should let angular know about the update that you have made, so that it can refresh the UI
				$scope.$apply();
			}
		};
	}
]);
&lt;/code&gt;&lt;/pre&gt;
</description>
    </item>
    
    <item>
      <title>how to get lintian warnings when using ubuntu</title>
      <link>http://blog.nkn.io/post/how-to-get-lintian-warnings-when-using-ubuntu/</link>
      <pubDate>Sun, 23 Mar 2014 13:00:00 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/how-to-get-lintian-warnings-when-using-ubuntu/</guid>
      <description>&lt;p&gt;Recently, I started to package &lt;a href=&#34;https://gitorious.org/varnamproject/libvarnam&#34;&gt;libvarnam&lt;/a&gt; for Debian. I followed the debian packaging guidelines and successfully created a package. I am using Ubuntu instead of Debian to do the packaging. Since Ubuntu is based on Debian, packaging also has the same procedure.&lt;/p&gt;

&lt;p&gt;Debian requires all the packages to be &lt;code&gt;lintian&lt;/code&gt; clean. Lintian is a command line utility which checks for errors and standards violations in the package files. My package was lintian clean and I have uploaded it into the debian mentors page seeking for sponsors. Then I noticed several lintian errors showing up in the mentors page. This was not coming up in my local lintian run.&lt;/p&gt;

&lt;p&gt;The main reason why lintian errors was showing differently on my local machine was because my local lintian uses Ubuntu&amp;rsquo;s profile settings and Debian has more strict rules than Ubuntu.&lt;/p&gt;

&lt;p&gt;When lintian is installed, it installs the files in to the following directory.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; ls /usr/share/lintian/profiles
debian  ubuntu
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;To get the warnings which lintian emits on a Debian machine, use the following command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;&amp;gt; lintian --pedantic --profile debian yourpackage.changes
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;This will show the exact warnings which mentors.debian.net is showing. This way you can do the debian packaging within ubuntu and make sure all the debian lintian checks are passing before uploading the package.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Channels in libuv</title>
      <link>http://blog.nkn.io/post/Channels%20in%20libuv/</link>
      <pubDate>Fri, 02 Aug 2013 12:59:50 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/Channels%20in%20libuv/</guid>
      <description>

&lt;p&gt;&lt;code&gt;go&lt;/code&gt; programming language provides a very powerful synchronization mechanism called &lt;a href=&#34;http://golang.org/doc/effective_go.html#channels&#34;&gt;channels&lt;/a&gt;. Channels simplifies communication between threads and makes it very easy to send and receive data from go routines.&lt;/p&gt;

&lt;p&gt;I always missed such functionalities when using &lt;code&gt;libuv&lt;/code&gt;. &lt;code&gt;libuv&lt;/code&gt; has &lt;code&gt;uv async_send&lt;/code&gt;, but it can be used only to wakeup the event loop. In this post, we will implement channels in &lt;code&gt;C&lt;/code&gt; using &lt;code&gt;libuv&lt;/code&gt;. The idea is to implement a channel so that user can use it without worrying about manually doing the synchronization.&lt;/p&gt;

&lt;h1 id=&#34;implementation:8acece6ccdbb27d74705676873e0c80e&#34;&gt;Implementation&lt;/h1&gt;

&lt;p&gt;A channel will have a queue, a mutex to synchronize the sending and receiving and a condition variable to signal receivers when data is available. When &lt;code&gt;uv_chan_send&lt;/code&gt; is called, it takes the data and puts it into a internal queue and signal all receivers about the data. &lt;code&gt;uv_chan_receive&lt;/code&gt; will acquire a lock, dequeue the data and unlock the lock.&lt;/p&gt;

&lt;p&gt;&lt;em&gt;uv-channel.h&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;typedef struct uv_chan_s uv_chan_t;

struct uv_chan_s {
  uv_mutex_t mutex;
  uv_cond_t cond;
  void* q[2];
};

int uv_chan_init(uv_chan_t* chan);
void uv_chan_send(uv_chan_t* chan, void* data);
void* uv_chan_receive(uv_chan_t* chan);
void uv_chan_destroy(uv_chan_t* chan);
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;em&gt;uv-channel.c&lt;/em&gt;:&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;typedef struct {
  void* data;
  uv_req_type type;
  void* active_queue[2];
} uv__chan_item_t;

int uv_chan_init(uv_chan_t* chan) {
  int r = uv_mutex_init (&amp;amp;chan-&amp;gt;mutex);
  if (r == -1)
    return r;

  QUEUE_INIT(&amp;amp;chan-&amp;gt;q);

  return uv_cond_init (&amp;amp;chan-&amp;gt;cond);
}

void uv_chan_send(uv_chan_t* chan, void* data) {
  uv__chan_item_t* item = malloc(sizeof(uv__chan_item_t));
  item-&amp;gt;data = data;

  uv_mutex_lock (&amp;amp;chan-&amp;gt;mutex);
  QUEUE_INSERT_TAIL(&amp;amp;chan-&amp;gt;q, &amp;amp;item-&amp;gt;active_queue);
  uv_cond_signal (&amp;amp;chan-&amp;gt;cond);
  uv_mutex_unlock (&amp;amp;chan-&amp;gt;mutex);
}

void* uv_chan_receive(uv_chan_t* chan) {
  uv__chan_item_t* item;
  QUEUE* head;
  void* data = NULL;

  uv_mutex_lock (&amp;amp;chan-&amp;gt;mutex);
  while (QUEUE_EMPTY(&amp;amp;chan-&amp;gt;q)) {
    uv_cond_wait (&amp;amp;chan-&amp;gt;cond, &amp;amp;chan-&amp;gt;mutex);
  }

  head = QUEUE_HEAD (&amp;amp;chan-&amp;gt;q);
  item = QUEUE_DATA (head, uv__chan_item_t, active_queue);
  data = item-&amp;gt;data;
  QUEUE_REMOVE (head);
  free (item);
  uv_mutex_unlock (&amp;amp;chan-&amp;gt;mutex);
  return data;
}

void uv_chan_destroy(uv_chan_t* chan) {
  uv_cond_destroy (&amp;amp;chan-&amp;gt;cond);
  uv_mutex_destroy (&amp;amp;chan-&amp;gt;mutex);
}
&lt;/code&gt;&lt;/pre&gt;

&lt;h1 id=&#34;example:8acece6ccdbb27d74705676873e0c80e&#34;&gt;Example&lt;/h1&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;#include &amp;quot;uv.h&amp;quot;
#include &amp;lt;stdio.h&amp;gt;
#include &amp;lt;stdlib.h&amp;gt;
#include &amp;lt;string.h&amp;gt;

static void worker(void* arg) {
  int i;
  char* string;
  uv_chan_t* chan = arg;

  for (i = 0; i &amp;lt; 10; i++) {
    string = malloc(sizeof(char) * 2);
    sprintf(string, &amp;quot;%d&amp;quot;, i);
    uv_chan_send (chan, string);
    uv_sleep (10);
  }
  uv_chan_send (chan, NULL);
}

int main(int argc, char** argv) {
  int threads_exited = 0;
  char* message;
  uv_chan_t chan;
  uv_thread_t thread1, thread2;

  uv_chan_init (&amp;amp;chan);
  uv_thread_create(&amp;amp;thread1, worker, &amp;amp;chan);
  uv_thread_create(&amp;amp;thread2, worker, &amp;amp;chan);

  while (threads_exited &amp;lt; 2) {
    message = uv_chan_receive(&amp;amp;chan);
    if (message == NULL)
      ++threads_exited;
    else {
      printf(&amp;quot;Message : %\n&amp;quot;, message);
      free(message);
    }
  }

  uv_chan_destroy (&amp;amp;chan);
  return 0;
}
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;In this example, I am executing two threads and each will execute the &lt;code&gt;worker&lt;/code&gt; function. &lt;code&gt;worker&lt;/code&gt; function will get an instance of the channel. Each worker will push some data into the channel and main thread receives all the data. Worker thread signals end of messages by passing a &lt;code&gt;NULL&lt;/code&gt; value to the channel. &lt;code&gt;uv_chan_receive&lt;/code&gt; blocks until the channel gets some data.&lt;/p&gt;

&lt;p&gt;Note: you need to allocate/deep copy the data before sending to the channel. Otherwise, worker would have overwritten the data before receiver gets it.&lt;/p&gt;

&lt;h1 id=&#34;future-work:8acece6ccdbb27d74705676873e0c80e&#34;&gt;Future work&lt;/h1&gt;

&lt;p&gt;Some ideas which would be nice to have:&lt;/p&gt;

&lt;ul&gt;
&lt;li&gt;Implement a timeout on &lt;code&gt;uv_chan_receive&lt;/code&gt;.&lt;/li&gt;
&lt;li&gt;Provide a deep copy callback on the channel, so that data can be send to the channel without copying and channel will take care of deep copying by invoking the specified callback.&lt;/li&gt;
&lt;/ul&gt;

&lt;p&gt;Happy programming!&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>Building static and shared libraries using CMake</title>
      <link>http://blog.nkn.io/post/Building%20static%20and%20shared%20libraries%20using%20CMake/</link>
      <pubDate>Sun, 28 Jul 2013 13:02:25 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/Building%20static%20and%20shared%20libraries%20using%20CMake/</guid>
      <description>&lt;p&gt;Recently in &lt;a href=&#34;https://github.com/navaneeth/libvarnam&#34;&gt;libvarnam&lt;/a&gt;, I had to build a static and shared library from the same source files. This was much harder before CMake 2.8. From CMake 2.8.8, CMake has support for &lt;code&gt;Object library&lt;/code&gt; which made it very simple.&lt;/p&gt;

&lt;p&gt;Basic idea is to use &lt;code&gt;add_library&lt;/code&gt; with &lt;code&gt;OBJECT&lt;/code&gt; type. CMake will compile all the source files provided in this target and makes the object files for it. It won&amp;rsquo;t create a temporary static library with all these object files. These object files can later be referred in the target which builds the library. In my CMakeLists.txt, I have the following.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-c&#34;&gt;add_library (core OBJECT ${SOURCES})
add_library (static STATIC $&amp;lt;TARGET_OBJECTS:core&amp;gt;)
add_library (shared SHARED $&amp;lt;TARGET_OBJECTS:core&amp;gt;)
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;The above will build static and shared library from the same set of object files. This improves compilation time considerably as source files will be compiled only once and used in multiple targets.&lt;/p&gt;
</description>
    </item>
    
    <item>
      <title>How to use individual lines pulled from stdin in the middle of a command when using xargs</title>
      <link>http://blog.nkn.io/post/how-to-use-individual-lines-pulled-from-stdin-in-the-middle-of-a-command-when-using-xargs/</link>
      <pubDate>Thu, 28 Feb 2013 12:59:50 +0530</pubDate>
      
      <guid>http://blog.nkn.io/post/how-to-use-individual-lines-pulled-from-stdin-in-the-middle-of-a-command-when-using-xargs/</guid>
      <description>&lt;p&gt;&lt;code&gt;xargs&lt;/code&gt; is very powerful commandline utility. Here is what Wikipedia says about &lt;code&gt;xargs&lt;/code&gt;&lt;/p&gt;

&lt;blockquote&gt;
&lt;p&gt;xargs is a command on Unix and most Unix-like operating systems used to build and execute command lines from standard input&lt;/p&gt;
&lt;/blockquote&gt;

&lt;p&gt;Most common use of &lt;code&gt;xargs&lt;/code&gt; would be to do something like,&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;find . -type f -print0 | xargs -0 rm
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;Let us assume that you have a file with list of files to be downloaded from a website. Something like,&lt;/p&gt;

&lt;pre&gt;&lt;code&gt;one.zip
two.zip
three.zip
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;With &lt;code&gt;wget&lt;/code&gt; and &lt;code&gt;xargs&lt;/code&gt; all these files can be downloaded easily with just one command.&lt;/p&gt;

&lt;pre&gt;&lt;code class=&#34;language-bash&#34;&gt;cat filenames.txt | xargs -I filename wget http://download.com/filename
&lt;/code&gt;&lt;/pre&gt;

&lt;p&gt;&lt;code&gt;-I&lt;/code&gt; flag takes a replacement string and &lt;code&gt;xargs&lt;/code&gt; will then replace &lt;code&gt;filename&lt;/code&gt; with the value obtained from &lt;code&gt;stdin&lt;/code&gt;.&lt;/p&gt;
</description>
    </item>
    
  </channel>
</rss>